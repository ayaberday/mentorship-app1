# Generated by Django 5.2.5 on 2025-08-17 19:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FeedbackForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Jalon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('date_echeance', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADF', 'Super Administrateur'), ('RH', 'Gestionnaire RH'), ('MENTOR', 'Mentor'), ('MENTEE', 'Mentoré')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Binome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentor', models.ForeignKey(limit_choices_to={'role': 'MENTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='mentors', to=settings.AUTH_USER_MODEL)),
                ('mentore', models.ForeignKey(limit_choices_to={'role': 'MENTEE'}, on_delete=django.db.models.deletion.CASCADE, related_name='mentores', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('SCALE', 'Échelle de notation'), ('TEXT', 'Réponse ouverte'), ('CHOICE', 'Choix multiple')], max_length=10)),
                ('choices', models.TextField(blank=True, help_text='Séparer les choix par une virgule pour le QCM')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='accounts.feedbackform')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_reponse', models.DateTimeField(auto_now_add=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='accounts.feedbackform')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.feedbackquestion')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='accounts.feedbackresponse')),
            ],
        ),
        migrations.AddField(
            model_name='feedbackform',
            name='jalon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback_forms', to='accounts.jalon'),
        ),
        migrations.CreateModel(
            name='JalonBinome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.CharField(choices=[('TODO', 'À faire'), ('WAIT', 'En attente de validation'), ('DONE', 'Complété')], default='TODO', max_length=10)),
                ('commentaire', models.TextField(blank=True)),
                ('date_realisation', models.DateTimeField(blank=True, null=True)),
                ('date_validation', models.DateTimeField(blank=True, null=True)),
                ('binome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jalons_binome', to='accounts.binome')),
                ('jalon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jalons_binome', to='accounts.jalon')),
            ],
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('gestionnaire', models.ForeignKey(limit_choices_to={'role': 'RH'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='jalon',
            name='programme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jalons', to='accounts.programme'),
        ),
        migrations.AddField(
            model_name='feedbackform',
            name='programme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_forms', to='accounts.programme'),
        ),
        migrations.AddField(
            model_name='binome',
            name='programme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='binomes', to='accounts.programme'),
        ),
    ]
